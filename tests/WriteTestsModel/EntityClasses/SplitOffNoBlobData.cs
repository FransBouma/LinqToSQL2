#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.2.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace WriteTests.EntityClasses
{
	/// <summary>Class which represents the entity 'SplitOffNoBlobData', mapped on table 'LLBLGenProUnitTest.dbo.SplitOffTest'.</summary>
	public partial class SplitOffNoBlobData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.String	_firstName;
		private System.Int32	_id;
		private System.String	_lastName;
		private EntityRef <SplitOffBlobData> _blobData;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnFirstNameChanging(System.String value);
		partial void OnFirstNameChanged();
		partial void OnIdChanging(System.Int32 value);
		partial void OnIdChanged();
		partial void OnLastNameChanging(System.String value);
		partial void OnLastNameChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="SplitOffNoBlobData"/> class.</summary>
		public SplitOffNoBlobData()
		{
			_blobData = default(EntityRef<SplitOffBlobData>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the FirstName field. Mapped on target field 'FirstName'. </summary>
		public System.String FirstName
		{
			get	{ return _firstName; }
			set
			{
				if((_firstName != value))
				{
					OnFirstNameChanging(value);
					SendPropertyChanging("FirstName");
					_firstName = value;
					SendPropertyChanged("FirstName");
					OnFirstNameChanged();
				}
			}
		}

		/// <summary>Gets or sets the Id field. Mapped on target field 'Id'. </summary>
		public System.Int32 Id
		{
			get	{ return _id; }
			set
			{
				if((_id != value))
				{
					OnIdChanging(value);
					SendPropertyChanging("Id");
					_id = value;
					SendPropertyChanged("Id");
					OnIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the LastName field. Mapped on target field 'LastName'. </summary>
		public System.String LastName
		{
			get	{ return _lastName; }
			set
			{
				if((_lastName != value))
				{
					OnLastNameChanging(value);
					SendPropertyChanging("LastName");
					_lastName = value;
					SendPropertyChanged("LastName");
					OnLastNameChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'SplitOffNoBlobData.BlobData - SplitOffBlobData.MainData (1:1)'</summary>
		public SplitOffBlobData BlobData
		{
			get { return _blobData.Entity; }
			set
			{
				SplitOffBlobData previousValue = _blobData.Entity;
				if((previousValue != value) || (_blobData.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("BlobData");
					if(previousValue != null)
					{
						_blobData.Entity = null;
						previousValue.MainData=null;
					}
					_blobData.Entity = value;
					if(value != null)
					{
						value.MainData = this;
					}
					this.SendPropertyChanged("BlobData");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649