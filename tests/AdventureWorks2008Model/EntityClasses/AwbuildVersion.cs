#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.2.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace ReadTestsAdventureWorks2008.EntityClasses
{
	/// <summary>Class which represents the entity 'AwbuildVersion', mapped on table 'AdventureWorks.dbo.AWBuildVersion'.</summary>
	public partial class AwbuildVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.String	_databaseVersion;
		private System.DateTime	_modifiedDate;
		private System.Byte	_systemInformationId;
		private System.DateTime	_versionDate;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnDatabaseVersionChanging(System.String value);
		partial void OnDatabaseVersionChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnSystemInformationIdChanging(System.Byte value);
		partial void OnSystemInformationIdChanged();
		partial void OnVersionDateChanging(System.DateTime value);
		partial void OnVersionDateChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="AwbuildVersion"/> class.</summary>
		public AwbuildVersion()
		{
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the DatabaseVersion field. Mapped on target field 'Database Version'. </summary>
		public System.String DatabaseVersion
		{
			get	{ return _databaseVersion; }
			set
			{
				if((_databaseVersion != value))
				{
					OnDatabaseVersionChanging(value);
					SendPropertyChanging("DatabaseVersion");
					_databaseVersion = value;
					SendPropertyChanged("DatabaseVersion");
					OnDatabaseVersionChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the SystemInformationId field. Mapped on target field 'SystemInformationID'. </summary>
		public System.Byte SystemInformationId
		{
			get	{ return _systemInformationId; }
			set
			{
				if((_systemInformationId != value))
				{
					OnSystemInformationIdChanging(value);
					SendPropertyChanging("SystemInformationId");
					_systemInformationId = value;
					SendPropertyChanged("SystemInformationId");
					OnSystemInformationIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the VersionDate field. Mapped on target field 'VersionDate'. </summary>
		public System.DateTime VersionDate
		{
			get	{ return _versionDate; }
			set
			{
				if((_versionDate != value))
				{
					OnVersionDateChanging(value);
					SendPropertyChanging("VersionDate");
					_versionDate = value;
					SendPropertyChanged("VersionDate");
					OnVersionDateChanged();
				}
			}
		}

		#endregion
	}
}
#pragma warning restore 0649