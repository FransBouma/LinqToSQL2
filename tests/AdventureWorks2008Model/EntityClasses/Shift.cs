#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.2.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace ReadTestsAdventureWorks2008.EntityClasses
{
	/// <summary>Class which represents the entity 'Shift', mapped on table 'AdventureWorks.HumanResources.Shift'.</summary>
	public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.TimeSpan	_endTime;
		private System.DateTime	_modifiedDate;
		private System.String	_name;
		private System.Byte	_shiftId;
		private System.TimeSpan	_startTime;
		private EntitySet <EmployeeDepartmentHistory> _employeeDepartmentHistories;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnEndTimeChanging(System.TimeSpan value);
		partial void OnEndTimeChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnNameChanging(System.String value);
		partial void OnNameChanged();
		partial void OnShiftIdChanging(System.Byte value);
		partial void OnShiftIdChanged();
		partial void OnStartTimeChanging(System.TimeSpan value);
		partial void OnStartTimeChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="Shift"/> class.</summary>
		public Shift()
		{
			_employeeDepartmentHistories = new EntitySet<EmployeeDepartmentHistory>(new Action<EmployeeDepartmentHistory>(this.Attach_EmployeeDepartmentHistories), new Action<EmployeeDepartmentHistory>(this.Detach_EmployeeDepartmentHistories) );
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		/// <summary>Attaches this instance to the entity specified as an associated entity</summary>
		/// <param name="entity">The related entity to attach to</param>
		private void Attach_EmployeeDepartmentHistories(EmployeeDepartmentHistory entity)
		{
			this.SendPropertyChanging("EmployeeDepartmentHistories");
			entity.Shift = this;
		}
		
		/// <summary>Detaches this instance from the entity specified so it's no longer an associated entity</summary>
		/// <param name="entity">The related entity to detach from</param>
		private void Detach_EmployeeDepartmentHistories(EmployeeDepartmentHistory entity)
		{
			this.SendPropertyChanging("EmployeeDepartmentHistories");
			entity.Shift = null;
		}


		#region Class Property Declarations
		/// <summary>Gets or sets the EndTime field. Mapped on target field 'EndTime'. </summary>
		public System.TimeSpan EndTime
		{
			get	{ return _endTime; }
			set
			{
				if((_endTime != value))
				{
					OnEndTimeChanging(value);
					SendPropertyChanging("EndTime");
					_endTime = value;
					SendPropertyChanged("EndTime");
					OnEndTimeChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the Name field. Mapped on target field 'Name'. </summary>
		public System.String Name
		{
			get	{ return _name; }
			set
			{
				if((_name != value))
				{
					OnNameChanging(value);
					SendPropertyChanging("Name");
					_name = value;
					SendPropertyChanged("Name");
					OnNameChanged();
				}
			}
		}

		/// <summary>Gets or sets the ShiftId field. Mapped on target field 'ShiftID'. </summary>
		public System.Byte ShiftId
		{
			get	{ return _shiftId; }
			set
			{
				if((_shiftId != value))
				{
					OnShiftIdChanging(value);
					SendPropertyChanging("ShiftId");
					_shiftId = value;
					SendPropertyChanged("ShiftId");
					OnShiftIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the StartTime field. Mapped on target field 'StartTime'. </summary>
		public System.TimeSpan StartTime
		{
			get	{ return _startTime; }
			set
			{
				if((_startTime != value))
				{
					OnStartTimeChanging(value);
					SendPropertyChanging("StartTime");
					_startTime = value;
					SendPropertyChanged("StartTime");
					OnStartTimeChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'EmployeeDepartmentHistory.Shift - Shift.EmployeeDepartmentHistories (m:1)'</summary>
		public EntitySet<EmployeeDepartmentHistory> EmployeeDepartmentHistories
		{
			get { return this._employeeDepartmentHistories; }
			set { this._employeeDepartmentHistories.Assign(value); }
		}
		
		#endregion
	}
}
#pragma warning restore 0649