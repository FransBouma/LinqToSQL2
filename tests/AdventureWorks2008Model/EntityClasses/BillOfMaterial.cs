#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.2.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace ReadTestsAdventureWorks2008.EntityClasses
{
	/// <summary>Class which represents the entity 'BillOfMaterial', mapped on table 'AdventureWorks.Production.BillOfMaterials'.</summary>
	public partial class BillOfMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.Int32	_billOfMaterialsId;
		private System.Int16	_bomlevel;
		private System.Int32	_componentId;
		private Nullable<System.DateTime>	_endDate;
		private System.DateTime	_modifiedDate;
		private System.Decimal	_perAssemblyQty;
		private Nullable<System.Int32>	_productAssemblyId;
		private System.DateTime	_startDate;
		private System.String	_unitMeasureCode;
		private EntityRef <Product> _product;
		private EntityRef <Product> _product1;
		private EntityRef <UnitMeasure> _unitMeasure;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBillOfMaterialsIdChanging(System.Int32 value);
		partial void OnBillOfMaterialsIdChanged();
		partial void OnBomlevelChanging(System.Int16 value);
		partial void OnBomlevelChanged();
		partial void OnComponentIdChanging(System.Int32 value);
		partial void OnComponentIdChanged();
		partial void OnEndDateChanging(Nullable<System.DateTime> value);
		partial void OnEndDateChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnPerAssemblyQtyChanging(System.Decimal value);
		partial void OnPerAssemblyQtyChanged();
		partial void OnProductAssemblyIdChanging(Nullable<System.Int32> value);
		partial void OnProductAssemblyIdChanged();
		partial void OnStartDateChanging(System.DateTime value);
		partial void OnStartDateChanged();
		partial void OnUnitMeasureCodeChanging(System.String value);
		partial void OnUnitMeasureCodeChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="BillOfMaterial"/> class.</summary>
		public BillOfMaterial()
		{
			_product = default(EntityRef<Product>);
			_product1 = default(EntityRef<Product>);
			_unitMeasure = default(EntityRef<UnitMeasure>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the BillOfMaterialsId field. Mapped on target field 'BillOfMaterialsID'. </summary>
		public System.Int32 BillOfMaterialsId
		{
			get	{ return _billOfMaterialsId; }
			set
			{
				if((_billOfMaterialsId != value))
				{
					OnBillOfMaterialsIdChanging(value);
					SendPropertyChanging("BillOfMaterialsId");
					_billOfMaterialsId = value;
					SendPropertyChanged("BillOfMaterialsId");
					OnBillOfMaterialsIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the Bomlevel field. Mapped on target field 'BOMLevel'. </summary>
		public System.Int16 Bomlevel
		{
			get	{ return _bomlevel; }
			set
			{
				if((_bomlevel != value))
				{
					OnBomlevelChanging(value);
					SendPropertyChanging("Bomlevel");
					_bomlevel = value;
					SendPropertyChanged("Bomlevel");
					OnBomlevelChanged();
				}
			}
		}

		/// <summary>Gets or sets the ComponentId field. Mapped on target field 'ComponentID'. </summary>
		public System.Int32 ComponentId
		{
			get	{ return _componentId; }
			set
			{
				if((_componentId != value))
				{
					if(_product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnComponentIdChanging(value);
					SendPropertyChanging("ComponentId");
					_componentId = value;
					SendPropertyChanged("ComponentId");
					OnComponentIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the EndDate field. Mapped on target field 'EndDate'. </summary>
		public Nullable<System.DateTime> EndDate
		{
			get	{ return _endDate; }
			set
			{
				if((_endDate != value))
				{
					OnEndDateChanging(value);
					SendPropertyChanging("EndDate");
					_endDate = value;
					SendPropertyChanged("EndDate");
					OnEndDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the PerAssemblyQty field. Mapped on target field 'PerAssemblyQty'. </summary>
		public System.Decimal PerAssemblyQty
		{
			get	{ return _perAssemblyQty; }
			set
			{
				if((_perAssemblyQty != value))
				{
					OnPerAssemblyQtyChanging(value);
					SendPropertyChanging("PerAssemblyQty");
					_perAssemblyQty = value;
					SendPropertyChanged("PerAssemblyQty");
					OnPerAssemblyQtyChanged();
				}
			}
		}

		/// <summary>Gets or sets the ProductAssemblyId field. Mapped on target field 'ProductAssemblyID'. </summary>
		public Nullable<System.Int32> ProductAssemblyId
		{
			get	{ return _productAssemblyId; }
			set
			{
				if((_productAssemblyId != value))
				{
					if(_product1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnProductAssemblyIdChanging(value);
					SendPropertyChanging("ProductAssemblyId");
					_productAssemblyId = value;
					SendPropertyChanged("ProductAssemblyId");
					OnProductAssemblyIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the StartDate field. Mapped on target field 'StartDate'. </summary>
		public System.DateTime StartDate
		{
			get	{ return _startDate; }
			set
			{
				if((_startDate != value))
				{
					OnStartDateChanging(value);
					SendPropertyChanging("StartDate");
					_startDate = value;
					SendPropertyChanged("StartDate");
					OnStartDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the UnitMeasureCode field. Mapped on target field 'UnitMeasureCode'. </summary>
		public System.String UnitMeasureCode
		{
			get	{ return _unitMeasureCode; }
			set
			{
				if((_unitMeasureCode != value))
				{
					if(_unitMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnUnitMeasureCodeChanging(value);
					SendPropertyChanging("UnitMeasureCode");
					_unitMeasureCode = value;
					SendPropertyChanged("UnitMeasureCode");
					OnUnitMeasureCodeChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'BillOfMaterial.Product - Product.BillOfMaterials (m:1)'</summary>
		public Product Product
		{
			get { return _product.Entity; }
			set
			{
				Product previousValue = _product.Entity;
				if((previousValue != value) || (_product.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Product");
					if(previousValue != null)
					{
						_product.Entity = null;
						previousValue.BillOfMaterials.Remove(this);
					}
					_product.Entity = value;
					if(value == null)
					{
						_componentId = default(System.Int32);
					}
					else
					{
						value.BillOfMaterials.Add(this);
						_componentId = value.ProductId;
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'BillOfMaterial.Product1 - Product.BillOfMaterials1 (m:1)'</summary>
		public Product Product1
		{
			get { return _product1.Entity; }
			set
			{
				Product previousValue = _product1.Entity;
				if((previousValue != value) || (_product1.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Product1");
					if(previousValue != null)
					{
						_product1.Entity = null;
						previousValue.BillOfMaterials1.Remove(this);
					}
					_product1.Entity = value;
					if(value == null)
					{
						_productAssemblyId = default(Nullable<System.Int32>);
					}
					else
					{
						value.BillOfMaterials1.Add(this);
						_productAssemblyId = value.ProductId;
					}
					this.SendPropertyChanged("Product1");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'BillOfMaterial.UnitMeasure - UnitMeasure.BillOfMaterials (m:1)'</summary>
		public UnitMeasure UnitMeasure
		{
			get { return _unitMeasure.Entity; }
			set
			{
				UnitMeasure previousValue = _unitMeasure.Entity;
				if((previousValue != value) || (_unitMeasure.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("UnitMeasure");
					if(previousValue != null)
					{
						_unitMeasure.Entity = null;
						previousValue.BillOfMaterials.Remove(this);
					}
					_unitMeasure.Entity = value;
					if(value == null)
					{
						_unitMeasureCode = default(System.String);
					}
					else
					{
						value.BillOfMaterials.Add(this);
						_unitMeasureCode = value.UnitMeasureCode;
					}
					this.SendPropertyChanged("UnitMeasure");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649