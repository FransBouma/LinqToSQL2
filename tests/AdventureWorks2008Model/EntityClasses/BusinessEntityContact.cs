#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.2.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace ReadTestsAdventureWorks2008.EntityClasses
{
	/// <summary>Class which represents the entity 'BusinessEntityContact', mapped on table 'AdventureWorks.Person.BusinessEntityContact'.</summary>
	public partial class BusinessEntityContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.Int32	_businessEntityId;
		private System.Int32	_contactTypeId;
		private System.DateTime	_modifiedDate;
		private System.Int32	_personId;
		private System.Guid	_rowguid;
		private EntityRef <BusinessEntity> _businessEntity;
		private EntityRef <ContactType> _contactType;
		private EntityRef <Person> _person;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBusinessEntityIdChanging(System.Int32 value);
		partial void OnBusinessEntityIdChanged();
		partial void OnContactTypeIdChanging(System.Int32 value);
		partial void OnContactTypeIdChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnPersonIdChanging(System.Int32 value);
		partial void OnPersonIdChanged();
		partial void OnRowguidChanging(System.Guid value);
		partial void OnRowguidChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="BusinessEntityContact"/> class.</summary>
		public BusinessEntityContact()
		{
			_businessEntity = default(EntityRef<BusinessEntity>);
			_contactType = default(EntityRef<ContactType>);
			_person = default(EntityRef<Person>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the BusinessEntityId field. Mapped on target field 'BusinessEntityID'. </summary>
		public System.Int32 BusinessEntityId
		{
			get	{ return _businessEntityId; }
			set
			{
				if((_businessEntityId != value))
				{
					if(_businessEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnBusinessEntityIdChanging(value);
					SendPropertyChanging("BusinessEntityId");
					_businessEntityId = value;
					SendPropertyChanged("BusinessEntityId");
					OnBusinessEntityIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the ContactTypeId field. Mapped on target field 'ContactTypeID'. </summary>
		public System.Int32 ContactTypeId
		{
			get	{ return _contactTypeId; }
			set
			{
				if((_contactTypeId != value))
				{
					if(_contactType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnContactTypeIdChanging(value);
					SendPropertyChanging("ContactTypeId");
					_contactTypeId = value;
					SendPropertyChanged("ContactTypeId");
					OnContactTypeIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the PersonId field. Mapped on target field 'PersonID'. </summary>
		public System.Int32 PersonId
		{
			get	{ return _personId; }
			set
			{
				if((_personId != value))
				{
					if(_person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnPersonIdChanging(value);
					SendPropertyChanging("PersonId");
					_personId = value;
					SendPropertyChanged("PersonId");
					OnPersonIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the Rowguid field. Mapped on target field 'rowguid'. </summary>
		public System.Guid Rowguid
		{
			get	{ return _rowguid; }
			set
			{
				if((_rowguid != value))
				{
					OnRowguidChanging(value);
					SendPropertyChanging("Rowguid");
					_rowguid = value;
					SendPropertyChanged("Rowguid");
					OnRowguidChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'BusinessEntityContact.BusinessEntity - BusinessEntity.BusinessEntityContacts (m:1)'</summary>
		public BusinessEntity BusinessEntity
		{
			get { return _businessEntity.Entity; }
			set
			{
				BusinessEntity previousValue = _businessEntity.Entity;
				if((previousValue != value) || (_businessEntity.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("BusinessEntity");
					if(previousValue != null)
					{
						_businessEntity.Entity = null;
						previousValue.BusinessEntityContacts.Remove(this);
					}
					_businessEntity.Entity = value;
					if(value == null)
					{
						_businessEntityId = default(System.Int32);
					}
					else
					{
						value.BusinessEntityContacts.Add(this);
						_businessEntityId = value.BusinessEntityId;
					}
					this.SendPropertyChanged("BusinessEntity");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'BusinessEntityContact.ContactType - ContactType.BusinessEntityContacts (m:1)'</summary>
		public ContactType ContactType
		{
			get { return _contactType.Entity; }
			set
			{
				ContactType previousValue = _contactType.Entity;
				if((previousValue != value) || (_contactType.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("ContactType");
					if(previousValue != null)
					{
						_contactType.Entity = null;
						previousValue.BusinessEntityContacts.Remove(this);
					}
					_contactType.Entity = value;
					if(value == null)
					{
						_contactTypeId = default(System.Int32);
					}
					else
					{
						value.BusinessEntityContacts.Add(this);
						_contactTypeId = value.ContactTypeId;
					}
					this.SendPropertyChanged("ContactType");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'BusinessEntityContact.Person - Person.BusinessEntityContacts (m:1)'</summary>
		public Person Person
		{
			get { return _person.Entity; }
			set
			{
				Person previousValue = _person.Entity;
				if((previousValue != value) || (_person.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Person");
					if(previousValue != null)
					{
						_person.Entity = null;
						previousValue.BusinessEntityContacts.Remove(this);
					}
					_person.Entity = value;
					if(value == null)
					{
						_personId = default(System.Int32);
					}
					else
					{
						value.BusinessEntityContacts.Add(this);
						_personId = value.BusinessEntityId;
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649