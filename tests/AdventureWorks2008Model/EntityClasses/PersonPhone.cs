#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.2.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace ReadTestsAdventureWorks2008.EntityClasses
{
	/// <summary>Class which represents the entity 'PersonPhone', mapped on table 'AdventureWorks.Person.PersonPhone'.</summary>
	public partial class PersonPhone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.Int32	_businessEntityId;
		private System.DateTime	_modifiedDate;
		private System.String	_phoneNumber;
		private System.Int32	_phoneNumberTypeId;
		private EntityRef <Person> _person;
		private EntityRef <PhoneNumberType> _phoneNumberType;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBusinessEntityIdChanging(System.Int32 value);
		partial void OnBusinessEntityIdChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnPhoneNumberChanging(System.String value);
		partial void OnPhoneNumberChanged();
		partial void OnPhoneNumberTypeIdChanging(System.Int32 value);
		partial void OnPhoneNumberTypeIdChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="PersonPhone"/> class.</summary>
		public PersonPhone()
		{
			_person = default(EntityRef<Person>);
			_phoneNumberType = default(EntityRef<PhoneNumberType>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the BusinessEntityId field. Mapped on target field 'BusinessEntityID'. </summary>
		public System.Int32 BusinessEntityId
		{
			get	{ return _businessEntityId; }
			set
			{
				if((_businessEntityId != value))
				{
					if(_person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnBusinessEntityIdChanging(value);
					SendPropertyChanging("BusinessEntityId");
					_businessEntityId = value;
					SendPropertyChanged("BusinessEntityId");
					OnBusinessEntityIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the PhoneNumber field. Mapped on target field 'PhoneNumber'. </summary>
		public System.String PhoneNumber
		{
			get	{ return _phoneNumber; }
			set
			{
				if((_phoneNumber != value))
				{
					OnPhoneNumberChanging(value);
					SendPropertyChanging("PhoneNumber");
					_phoneNumber = value;
					SendPropertyChanged("PhoneNumber");
					OnPhoneNumberChanged();
				}
			}
		}

		/// <summary>Gets or sets the PhoneNumberTypeId field. Mapped on target field 'PhoneNumberTypeID'. </summary>
		public System.Int32 PhoneNumberTypeId
		{
			get	{ return _phoneNumberTypeId; }
			set
			{
				if((_phoneNumberTypeId != value))
				{
					if(_phoneNumberType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnPhoneNumberTypeIdChanging(value);
					SendPropertyChanging("PhoneNumberTypeId");
					_phoneNumberTypeId = value;
					SendPropertyChanged("PhoneNumberTypeId");
					OnPhoneNumberTypeIdChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'PersonPhone.Person - Person.PersonPhones (m:1)'</summary>
		public Person Person
		{
			get { return _person.Entity; }
			set
			{
				Person previousValue = _person.Entity;
				if((previousValue != value) || (_person.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Person");
					if(previousValue != null)
					{
						_person.Entity = null;
						previousValue.PersonPhones.Remove(this);
					}
					_person.Entity = value;
					if(value == null)
					{
						_businessEntityId = default(System.Int32);
					}
					else
					{
						value.PersonPhones.Add(this);
						_businessEntityId = value.BusinessEntityId;
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'PersonPhone.PhoneNumberType - PhoneNumberType.PersonPhones (m:1)'</summary>
		public PhoneNumberType PhoneNumberType
		{
			get { return _phoneNumberType.Entity; }
			set
			{
				PhoneNumberType previousValue = _phoneNumberType.Entity;
				if((previousValue != value) || (_phoneNumberType.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("PhoneNumberType");
					if(previousValue != null)
					{
						_phoneNumberType.Entity = null;
						previousValue.PersonPhones.Remove(this);
					}
					_phoneNumberType.Entity = value;
					if(value == null)
					{
						_phoneNumberTypeId = default(System.Int32);
					}
					else
					{
						value.PersonPhones.Add(this);
						_phoneNumberTypeId = value.PhoneNumberTypeId;
					}
					this.SendPropertyChanged("PhoneNumberType");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649