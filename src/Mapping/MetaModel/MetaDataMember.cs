using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Data.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Text;
using System.Linq;
using System.Diagnostics.CodeAnalysis;

namespace System.Data.Linq.Mapping
{
	/// <summary>
	/// A MetaDataMember represents the mapping between a domain object's field or property into a database table's column.
	/// </summary>
	[SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", MessageId = "MetaData", Justification = "The capitalization was deliberately chosen.")]
	public abstract class MetaDataMember
	{
		/// <summary>
		/// The MetaType containing this data member.
		/// </summary>
		public abstract MetaType DeclaringType { get; }
		/// <summary>
		/// The underlying MemberInfo.
		/// </summary>
		public abstract MemberInfo Member { get; }
		/// <summary>
		/// The member that actually stores this member's data.
		/// </summary>
		public abstract MemberInfo StorageMember { get; }
		/// <summary>
		/// The name of the member, same as the MemberInfo name.
		/// </summary>
		public abstract string Name { get; }
		/// <summary>
		/// The name of the column (or constraint) in the database.
		/// </summary>
		public abstract string MappedName { get; }
		/// <summary>
		/// The oridinal position of this member in the default layout of query results.
		/// </summary>
		public abstract int Ordinal { get; }
		/// <summary>
		/// The type of this member.
		/// </summary>
		[SuppressMessage("Microsoft.Naming", "CA1721:PropertyNamesShouldNotMatchGetMethods", Justification = "The contexts in which this is available are fairly specific.")]
		public abstract Type Type { get; }
		/// <summary>
		/// True if this member is declared by the specified type.
		/// </summary>
		/// <param name="type">Type to check.</param>
		public abstract bool IsDeclaredBy(MetaType type);
		/// <summary>
		/// The accessor used to get/set the value of this member.
		/// </summary>
		public abstract MetaAccessor MemberAccessor { get; }
		/// <summary>
		/// The accessor used to get/set the storage value of this member.
		/// </summary>
		public abstract MetaAccessor StorageAccessor { get; }
		/// <summary>
		/// The accessor used to get/set the deferred value of this member (without causing fetch).
		/// </summary>
		public abstract MetaAccessor DeferredValueAccessor { get; }
		/// <summary>
		/// The accessor used to get/set the deferred source of this member.
		/// </summary>
		public abstract MetaAccessor DeferredSourceAccessor { get; }
		/// <summary>
		/// True if this member is defer-loaded by default.
		/// </summary>
		public abstract bool IsDeferred { get; }
		/// <summary>
		/// True if this member is mapped to a column (or constraint).
		/// </summary>
		public abstract bool IsPersistent { get; }
		/// <summary>
		/// True if this member defines an association relationship.
		/// </summary>
		public abstract bool IsAssociation { get; }
		/// <summary>
		/// True if this member is part of the type's identity.
		/// </summary>
		public abstract bool IsPrimaryKey { get; }
		/// <summary>
		/// True if this member is automatically generated by the database.
		/// </summary>
		[SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", MessageId = "Db", Justification = "Conforms to legacy spelling.")]
		public abstract bool IsDbGenerated { get; }
		/// <summary>
		/// True if this member represents the row version or timestamp.
		/// </summary>
		public abstract bool IsVersion { get; }
		/// <summary>
		/// True if this member represents the inheritance discriminator.
		/// </summary>
		public abstract bool IsDiscriminator { get; }
		/// <summary>
		/// True if this member's value can be assigned the null value.
		/// </summary>
		public abstract bool CanBeNull { get; }
		/// <summary>
		/// The type of the database column.
		/// </summary>
		[SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", MessageId = "Db", Justification = "Conforms to legacy spelling.")]
		public abstract string DbType { get; }
		/// <summary>
		/// Expression defining a computed column.
		/// </summary>
		public abstract string Expression { get; }
		/// <summary>
		/// The optimistic concurrency check policy for this member.
		/// </summary>
		public abstract UpdateCheck UpdateCheck { get; }
		/// <summary>
		/// Specifies for inserts and updates when this member should be read back after the
		/// operation completes.
		/// </summary>
		public abstract AutoSync AutoSync { get; }
		/// <summary>
		/// The MetaAssociation corresponding to this member, or null if there is none.
		/// </summary>
		public abstract MetaAssociation Association { get; }
		/// <summary>
		/// The DataContext method used to perform load operations
		/// </summary>
		public abstract MethodInfo LoadMethod { get; }
	}
}

